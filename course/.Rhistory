deposit_a<-107.37
deposit_k<-97.37
deposit_a*15+deposit_k*4
remain_a<-adult_p-deposit_a
remain_k<-kid_p-deposit_k
remain_a
remain_k
deposit_a<-107.37
deposit_k<-97.37
deposit_a*15+deposit_k*4
159+67+141
1287.31+688.14
451.48/8
451.48/7
347.30/7
89.68-51.34
child2<-71.02-42.01
child1<-89.68-51.34
child1
child2
89.68/38.34
child1/89.68
child2/71.02
teen1<-89.68-51.34
teen2<-89.02-51.01
teen1/89.68
teen2/89.02
child1/89.68
71.02/child2
child2/71.02
infant1<-55.52-51.34
infant1/55.52
55.52*0.12
55.52+6.66
samallcase<-22
standardcase<-26
Tombook<-914.8
yfbook<-660.70
tombook<-914.8
yfbook<-660.70
tom_flight<-tombook - (samllcase+standardcase*2)
samllcase<-22
tom_flight<-tombook - (samllcase+standardcase*2)
tom_flight
yf_flight<-yfbook - (standardcase*2)
tom_flight
yf_flight
tom_flight/8
128.02-51.34
76.68/2
38.34/51.34
teen1/89.68
49.50+49.50
52.85+26.85
24.76+26.59
24.76*2 + 13+13.59+13.59
24.76 * 12/100
adult_tax<-26.59
teen_child_tax<-13.59
infant_tax<-1.21
t_price
# t_price*8 + 6*adult_tax + 2*teen_child_tax = tom_flight
t_price <- (tom_flight -6*adult_tax- 2*teen_child_tax)/8
t_price
# y_price*7 + y_price*0.12 + 5*adult_tax + 2*teen_child_tax + infant_tax = yf_flight
y_price = (yf_flight -5*adult_tax - 2*teen_child_tax -infant_tax )/7.12
y_price
y_price*7 + y_price*0.12 + 5*adult_tax + 2*teen_child_tax + infant_tax
yf_flight
y_price*7 + y_price*0.12 + 5*adult_tax + 2*teen_child_tax + infant_tax +standardcase*2
t_price*8 + 6*adult_tax + 2*teen_child_tax +samllcase+standardcase*2
# price for parents
p_dad.mom<- y_price*2 + 2*adult_tax + standardcase
p_dad.mom
p_yf<-y_price +adult_tax
p_yf
tom_flight<-tombook - (samllcase*1*2+standardcase*2*2)
yf_flight<-yfbook - (standardcase*2*2)
# t_price*8 + 6*adult_tax + 2*teen_child_tax = tom_flight
t_price <- (tom_flight -6*adult_tax- 2*teen_child_tax)/8
t_price*8 + 6*adult_tax + 2*teen_child_tax +samllcase+standardcase*2
t_price
t_price*8 + 6*adult_tax + 2*teen_child_tax +samllcase*1*2+standardcase*2*2
tom_flight<-tombook - (samllcase*1*2+standardcase*2*2)
yf_flight<-yfbook - (standardcase*2*2)
# y_price*7 + y_price*0.12 + 5*adult_tax + 2*teen_child_tax + infant_tax = yf_flight
y_price = (yf_flight -5*adult_tax - 2*teen_child_tax -infant_tax )/7.12
y_price*7 + y_price*0.12 + 5*adult_tax + 2*teen_child_tax + infant_tax +standardcase*2
y_price*7 + y_price*0.12 + 5*adult_tax + 2*teen_child_tax + infant_tax +standardcase*2*2
# price for parents
p_dad.mom<- y_price*2 + 2*adult_tax + standardcase*2
p_yf<-y_price +adult_tax
p_yf
y_price
# y_price*7 + y_price*0.12 + 5*adult_tax + 2*teen_child_tax + infant_tax = yf_flight
y_price = (yf_flight -5*adult_tax - 2*teen_child_tax -infant_tax )/7.12
y_price*7 + y_price*0.12 + 5*adult_tax + 2*teen_child_tax + infant_tax +standardcase*2*2
y_price
p_yamei<- y_price*4 + y_price*0.12 + 2*adult_tax + 2*teen_child_tax + infant_tax + standardcase*2
p_yamei
p_tom<-t_price+adult_tax+samllcase*1*2
p_yf
p_tom
p_sister<- t_price*6 + 4*adult_tax + 2*teen_child_tax + standardcase*2*2
p_sister
p_wallis <-t_price + adult_tax
p_wallis
p_dad.mom+p_yf+p_yamei+p_sister+p_wallis+p_tom
tombook+yfbook
p_tom
p_yf
p_dad.mom
p_yamei
p_sister
tombook+yfbook
deposit_a
# accommodation
highland=40*2
edin=40+22
flight=100
scotland=3940/19
adult_p<-207.37
kid_p<-adult_p-10
15*adult_p+4*kid_p
paid_ratio=2000/3900
deposit_a<-107.37
deposit_k<-97.37
deposit_a*15+deposit_k*4
deposit_a
deposit_a*2
deposit_a*4
deposit_k
deposit_k+deposit_a
deposit_a*2+deposit_k*3
246/4
246/6
178.20/8
225.72/10
22.572*4
403.92/18
22.44*4
22.44*2
1287.31*0.25
321.83+688.14
1287.31-1009.97
277.34*41
5849.65*41
1287.31-688.14
599.17 * 40
12000*2+600*5
biocLite("Gviz")
#load the package
library(Gviz)
#install the package
source("http://bioconductor.org/biocLite.R")
biocLite("Gviz")
#load the package
library(Gviz)
#load the package
library("Gviz")
biocLite("Gviz")
#install the package
source("http://bioconductor.org/biocLite.R")
biocLite("Gviz")
#load the package
library("Gviz")
#following the example
library(GenomicRanges)
data(cpgIslands)
class(cpgIslands)
#[1] "GRanges"
attr(,"package")
chr <- as.character(unique(seqnames(cpgIslands)))
gen <- genome(cpgIslands)
atrack <- AnnotationTrack(cpgIslands, name = "CpG")
gtrack <- GenomeAxisTrack()
itrack <- IdeogramTrack(genome = gen, chromosome = chr)
data(geneModels)
grtrack <- GeneRegionTrack(geneModels, genome = gen, chromosome = chr, name = "Gene Model")
gen <- genome(cpgIslands)
atrack <- AnnotationTrack(cpgIslands, name = "CpG")
gtrack <- GenomeAxisTrack()
itrack <- IdeogramTrack(genome = gen, chromosome = chr)
gen
chr
data(geneModels)
grtrack <- GeneRegionTrack(geneModels, genome = gen, chromosome = chr, name = "Gene Model")
plotTracks(list(itrack, gtrack, atrack, grtrack))
plotTracks(list(gtrack, atrack, grtrack))
grtrack <- GeneRegionTrack(geneModels, genome = gen, chromosome = chr, name = "Gene Model")
# exercise
ref <- GRanges('chr', IRanges(1, 500))
ref_track <- GenomeAxisTrack(ref, lwd=4, fontsize=20)
data <- data.frame(chr=c('chr1','chr1','chr1'),
start=c(50,200,400),
end=c(75, 250, 500),
id=c('one', 'two', 'three'),
strand=c('+','-','-'))
data
#chr start end    id strand
#1 chr1    50  75   one      +
#  2 chr1   200 250   two      -
#  3 chr1   400 500 three      -
data_g <- with(data, GRanges(chr, IRanges(start, end), strand, id=id))
data_g
data_track <- AnnotationTrack(data_g, name = "Features", width = 15, showFeatureId = T, min.height=2)
plotTracks(c(ref_track, data_track))
AnnotationTrack
data_track
sessionInfo
sessionInfo()
biocLite("BiocUpgrade")
biocLite("BiocUpgrade")
#install the package
source("http://bioconductor.org/biocLite.R")
install.packages("BiocInstaller", repos = a["BioCsoft", "URL"])
#install the package
source("http://bioconductor.org/biocLite.R")
biocLite("Gviz")
#load the package
library("Gviz")
#following the example
library(GenomicRanges)
data(cpgIslands)
class(cpgIslands)
chr <- as.character(unique(seqnames(cpgIslands)))
gen <- genome(cpgIslands)
atrack <- AnnotationTrack(cpgIslands, name = "CpG")
gtrack <- GenomeAxisTrack()
itrack <- IdeogramTrack(genome = gen, chromosome = chr)
data(geneModels)
grtrack <- GeneRegionTrack(geneModels, genome = gen, chromosome = chr, name = "Gene Model")
plotTracks(list(gtrack, atrack, grtrack))
# exercise
ref <- GRanges('chr', IRanges(1, 500))
ref_track <- GenomeAxisTrack(ref, lwd=4, fontsize=20)
data <- data.frame(chr=c('chr1','chr1','chr1'),
start=c(50,200,400),
end=c(75, 250, 500),
id=c('one', 'two', 'three'),
strand=c('+','-','-'))
data
data_g <- with(data, GRanges(chr, IRanges(start, end), strand, id=id))
data_g <- with(data, GRanges(chr, IRanges(start, end), strand, id=id))
data_track <- AnnotationTrack(data_g, name = "Features", width = 15, showFeatureId = T, min.height=2)
plotTracks(c(ref_track, data_track))
ref
# exercise
ref <- GRanges('3R', IRanges(1, 500))
ref_track <- GenomeAxisTrack(ref, lwd=4, fontsize=20)
ref_track
data <- data.frame(chr=c('3R','3R','3R'),
start=c(50,200,400),
end=c(75, 250, 500),
id=c('one', 'two', 'three'),
strand=c('+','-','-'))
data
data_g <- with(data, GRanges(chr, IRanges(start, end), strand, id=id))
data_track <- AnnotationTrack(data_g, name = "Features", width = 15, showFeatureId = T, min.height=2)
plotTracks(c(ref_track, data_track))
#index the bam files, if you haven't already
library(Rsamtools)
k562_nuc_pam <- '/Users/yfwang27/workfromhome/Laura/Ensembl/subset3Rbam/FemaleM1_3R.bam'
#index the bam files, if you haven't already
library(Rsamtools)
indexBam(k562_nuc_pam)
k562_nuc_pam_track <- DataTrack(range = k562_nuc_pam,
genome = "dm6",
type = "heatmap",
name = "Coverage",
window = -1,
chromosome = "3R")
k562_nuc_pam_track <- DataTrack(range = k562_nuc_pam,
genome = "dm6",
type = "heatmap",
name = "Coverage",
window = -1,
chromosome = "chr3R")
plotTracks(list(k562_nuc_pam_track, k562_nuc_pap_track), from = 100000, to = 1000000)
plotTracks(list(k562_nuc_pam_track), from = 100000, to = 1000000)
?DataTrack
afrom<-7920000
ato<-7970000
bmt <- BiomartGeneRegionTrack(genome = "dm6", chromosome = "chr3R",
start = afrom, end = ato, filter = list(with_ox_refseq_mrna = TRUE),
stacking = "dense")
bmt <- BiomartGeneRegionTrack(genome = "dm6", chromosome = "chr3R",
start = afrom, end = ato,
stacking = "dense")
bmt <- BiomartGeneRegionTrack(genome = "dm6", chromosome = "3R",
start = afrom, end = ato,
stacking = "dense")
bmt <- BiomartGeneRegionTrack(genome = "dm6", chromosome = "chr3R",
start = afrom, end = ato,
stacking = "dense")
?BiomartGeneRegionTrack
?useMart
mart = useMart('ensembl')
library("biomaRt")
mart = useMart('ensembl')
listDatasets(mart)
haha<-listDatasets(mart)
head(haha)
haha[grep("Drosophila",haha$description),]
haha[grep("fly",haha$description),]
mart=useMart("ensembl","dmelanogaster_gene_ensembl")
biomTrack <- BiomartGeneRegionTrack(genome = "dm6", chromosome =
"chr3R",start = afrom , end = ato, name = "ENSEMBLE",
filters=list("with_protein_id"=TRUE),mart=mart,showId=TRUE)
plotTracks(list(biomTrack), from = 7920000, to = 7970000)
source("https://bioconductor.org/biocLite.R")
biocLite("ChIPSeqSpike")
library("ChIPSeqSpike")
#load the package
library("Gviz")
biocLite("Gviz")
#following the example
library(GenomicRanges)
library(Rsamtools)
k562_nuc_pam <- '/Users/yfwang27/workfromhome/Laura/Ensembl/sortBam_sub3R/MaleM3_srt3R.bam'
#index the bam files, if you haven't already
library(Rsamtools)
k562_nuc_pam_track <- DataTrack(range = k562_nuc_pam,
genome = "dm6",
type = "heatmap",
name = "Coverage",
window = -1,
chromosome = "chr3R")
??DataTrack
#load the package
library("Gviz")
k562_nuc_pam_track <- DataTrack(range = k562_nuc_pam,
genome = "dm6",
type = "heatmap",
name = "Coverage",
window = -1,
chromosome = "chr3R")
plotTracks(list(k562_nuc_pam_track), from = 100000, to = 1000000)
afrom<-7920000
ato<-7970000
mart = useMart('ensembl')
haha<-listDatasets(mart)
mart=useMart("ensembl","dmelanogaster_gene_ensembl")
biomTrack <- BiomartGeneRegionTrack(genome = "dm6", chromosome =
"chr3R",start = afrom , end = ato, name = "ENSEMBLE",
filters=list("with_protein_id"=TRUE),mart=mart,showId=TRUE)
plotTracks(list(biomTrack), from = 7920000, to = 7970000)
biomTrack <- BiomartGeneRegionTrack(genome = "dm6", chromosome =
"chr3R",start = afrom , end = ato, name = "ENSEMBLE",
filters=list("with_protein_id"=TRUE),mart=mart,showId=TRUE)
library("biomaRt")
mart = useMart('ensembl')
haha<-listDatasets(mart)
mart=useMart("ensembl","dmelanogaster_gene_ensembl")
biomTrack <- BiomartGeneRegionTrack(genome = "dm6", chromosome =
"chr3R",start = afrom , end = ato, name = "ENSEMBLE",
filters=list("with_protein_id"=TRUE),mart=mart,showId=TRUE)
plotTracks(list(biomTrack), from = 7920000, to = 7970000)
plotTracks(list(biomTrack,k562_nuc_pam_track), from = 7920000, to = 7970000)
?DataTrack
options(ucscChromosomeNames=FALSE)
k562_nuc_pam_track <- DataTrack(range = k562_nuc_pam,
genome = "dm6",
type = "heatmap",
name = "Coverage",
window = -1,
chromosome = "3R")
plotTracks(list(k562_nuc_pam_track), from = 100000, to = 1000000)
library("Rsubread")
source("https://bioconductor.org/biocLite.R")
biocLite("Rsubread")
library(Rsubread)
?featureCounts
library(maps)       # Provides functions that let us plot the maps
library(mapdata)    # Contains the hi-resolution points that mark out the countries.
install.packages(mapdata)
install.packages("mapdata")
library(mapdata)    # Contains the hi-resolution points that mark out the countries.
map('worldHires')
map('worldHires','Italy')
map('worldHires',
c('UK', 'Ireland', 'Isle of Man','Isle of Wight', 'Wales:Anglesey'))
c('UK', 'Ireland', 'Isle of Man','Isle of Wight', 'Wales:Anglesey'))
map('worldHires',
c('UK', 'Ireland', 'Isle of Man','Isle of Wight', 'Wales:Anglesey'))
map('worldHires',
c('UK', 'Ireland', 'Isle of Man','Isle of Wight'),
xlim=c(-11,3), ylim=c(49,60.9))
map('worldHires',
c('Portugal'),
xlim=c(-11,3), ylim=c(49,60.9))
map('worldHires',
'Portugal',
xlim=c(-11,3), ylim=c(49,60.9))
map('worldHires',
'Portugal')
map('worldHires',
'Taiwan')
?map
map('worldHires',
'Portugal')
map('worldHires',
'Portugal',col="grey")
map('worldHires',
'Portugal',col="grey",fill=T)
3462.72 + 3738.16
6500 - 7200.88
7200.88-6500
8000-700
7300 *40
292000 / (6+4+2)
24333 / 9
2703 /40
6500/2
sister<-3738.16
brother<-3462.72
input_money<-(3250+4000)
input_money
sister.cash<-input_money-sister
brother.cash<-input_money-brother
sister.cash
brother.cash
sister.cash+brother.cash
179.26*40
179.26+448.15
358.52+179.26
89.63*6
89.63*7
17*89.63
197+89.63
286.63+89.63
1524
1900-1524
1524+376
28.9/2
48/5
silverfood<-24.95
no.adult<-64
food.adult.total<-silverfood*no.adult
food.adult.total
childfood<-7.95
no.child<-4
no.child<-5
food.child.total<-no.child*childfood
food.adult.total
food.child.total
700/20
700/40
70*15
1000/4
3152.87-1200
22-15
mon2tom<-2465/2
mon2tom
mon2tom<-mon2tom-34.45
mon2tom
33*40
mon2tom<-mon2tom-(33.63/2)
mon2tom
1260*2
2520/42
2520/40
2520/38
2520/38.9
country.of.interest<-c("Japan","Morocco","Iceland","Mongolia","Portugal","Uzbekistan")
country.of.interest<-country.of.interest[order(country.of.interest)]
set.seed(21072018)
Table_df<-data.frame(Country=country.of.interest, Table.no=sample(1:6))
Table_df<-Table_df[order(Table_df$Table.no),c(2,1)]
Table_df
6*35
6*35+10
4200+220+240
1592.34-762.01
92.94*2
92.94*2+92.7
278.58*40
92.94*2
97.2*2
1707.06-1107.06
7800/40
2700/40
116-91
3350/30
21000/3
21000/40
20*(52-4)*2
456.26 + 625 + 35
625 + 35 +8
668/2
setwd("/Users/yfwang27/workfromhome/workshop/LMS_StatisticsInR/course")
alldata<-read.csv(file="data/mouse_BW_Fat_Glu_info.csv")
library(ggplot2)
ggplot(alldata, aes(x=Genotype, y=BW.gram, fill=Age)) + geom_violin(position=position_dodge(width = 0.5)) +geom_boxplot(width=.1, outlier.colour=NA,position=position_dodge(width = 0.5))
WT_data<-alldata[alldata$Genotype=="+/+",]
WT_data$BW.gram
min.BW.gram<-min(WT_data$BW.gram)
max.BW.gram<-max(WT_data$BW.gram)
median.BW.gram<-median(WT_data$BW.gram)
mean.BW.gram<-mean(WT_data$BW.gram)
c(min.BW.gram, max.BW.gram, median.BW.gram, mean.BW.gram)
range(WT_data$BW.gram)
quantile(WT_data$BW.gram)
boxplot(WT_data$BW.gram,ylab="Body Weight (gram)")
abline(h=mean(WT_data$BW.gram),col="forestgreen",lwd=3)
KO_data<-alldata[alldata$Genotype=="db/db",]
head(KO_data)
pwh <-  ggplot(KO_data, aes(BW.gram, FatTissue.percent))
pwh + geom_point() + labs(x = "Body weight (gram)",y="Fat Tissue (%)")
lmResult<-lm(formula = FatTissue.percent ~ BW.gram, data = KO_data)
lmResult
mean(KO_data$FatTissue.percent)
